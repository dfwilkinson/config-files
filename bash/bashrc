# ~/.bashrc: executed by bash(1) for non-login shells.

if [ "$PS1" ];    then  # If running interactively

##################################################
# Useful info about parent being sshd or not (xterm)
##################################################
   if [[ -z "$PShost" ]]; then
     PShost=${HOSTNAME%%.*}
   fi
   PSuser=${USER}
   # if this is a subshell this will already be set
   if [ -z "${PARENT_OF_ALL_SHELLS}" ]; then # otherwise
      PARENT_OF_ALL_SHELLS=`ps -p $PPID`
      case $OSTYPE in
         cygwin)
            export PARENT_OF_ALL_SHELLS=${PARENT_OF_ALL_SHELLS##*/}
            ;;
         freebsd7.1 | freebsd8.0)
            PARENT_OF_ALL_SHELLS=${PARENT_OF_ALL_SHELLS##*(}
            export PARENT_OF_ALL_SHELLS=${PARENT_OF_ALL_SHELLS%)}
            ;;
         *) # linux-gnu|solaris2.8)
            export PARENT_OF_ALL_SHELLS=${PARENT_OF_ALL_SHELLS##* }
            ;;
      esac
   fi
   export SHELL_TYPE=bash
   if [ "${PARENT_OF_ALL_SHELLS}" = "sshd" ]; then
      export SHELL_TYPE=ssh
      #SSHinfo="${PSuser}@${PShost}"
      SSHinfo="@${PShost}"
   fi

##################################################
# In case COLUMNS is not set (e.g., cygwin?)
##################################################
   if [ -z "$COLUMNS" ]; then
      COLUMNS=40
   fi

##################################################
# Set prompt
##################################################
   BLD="\[\e[1;37m\]"; HLT="\[\e[7m\]"; OFF="\[\e[m\]";
   RED="\[\e[1;31m\]"; YLO="\[\e[1;33m\]";
   if test -f ${HOME}/.ConfigFiles/bash/prompt_function.sh; then
      source ${HOME}/.ConfigFiles/bash/prompt_function.sh
      export PROMPT_COMMAND=prompt_function
      export PS1="
${BLD}\${PSsep}${OFF}
${BLD}\${PShost}:${OFF}\${PSdir}
${YLO}\${PSjobs}${OFF}\
${HLT}${RED}\${PSerrs}${OFF}\
\${PSdate}[${OFF}\${PStime}${OFF}\${PStimeampm:0:1}]${YLO}\${PSshlvl}${OFF}${BLD}\$${OFF}" # add \! to get history index
   else
      export PS1="
${BLD}\h:${OFF}${PWD}
[\!](${RED}\$?${OFF},${YLO}\j${OFF})${BLD}\$${OFF}"
   fi

##################################################
# Set enviroment variables
##################################################
   export EDITOR=vim
   export PAGER=less
   export MANPAGER=less
   export HISTCONTROL=ignoredups # No duplicates in history
   umask 027 # Default file creation mask
   set +o emacs; set -o vi # vi command-line editing

##################################################
# Set up partial history search
##################################################
   bind '"\C-p": history-search-backward' # Ctrl-P
#    bind '"\e[A":history-search-backward'  # Up Arrow
   bind '"\C-n": history-search-forward'  # Ctrl-N
#    bind '"\e[B":history-search-forward'   # Down Arrow
# older versions?
#  bind '"\M-OA": history-search-backward' # doesn't work?
#  bind '"\M-[A": history-search-backward' # doesn't work?
#  bind '"\M-OB": history-search-forward' # doesn't work?
#  bind '"\M-[B": history-search-forward' # doesn't work?

##################################################
# Aliases (Source aliases if it exists)
##################################################
   if test -f ~/.ConfigFiles/bash/aliases.src; then
      source ~/.ConfigFiles/bash/aliases.src
   fi

##################################################
# Command completion
##################################################
   shopt -s extglob progcomp
   if test -f ~/.ConfigFiles/bash/svn_completion.src; then
     source ~/.ConfigFiles/bash/svn_completion.src
   fi
   if test -f ~/.ConfigFiles/bash/alias_with_completion.src; then
     source ~/.ConfigFiles/bash/alias_with_completion.src
   fi

##################################################
# Handy functions
##################################################
  box() {
    local text_to_box=$1
    if [ -n "$2" ]; then local box_indent=$1; local text_to_box=$2; fi
    local underline=`tput smul`
    local nounderline=`tput rmul`
    if [ -n "$box_indent" ]; then printf "%0.s " $(seq 1 $box_indent); fi
    printf "%0.s_" $(seq 1 ${#text_to_box})
    printf "\n"
    if [ -n "$box_indent" ]; then printf "%0.s " $(seq 1 $box_indent); fi
    printf "$underline${text_to_box}$nounderline\n"
  }

##################################################
# Print some useful info on start up
##################################################
   echo "  Starting shell on ${PSuser}@${PShost}"
   echo "    terminal: $TERM"
   echo "    type    : $SHELL_TYPE"
   echo "    width   : ${COLUMNS}"
   echo "    screens :"
   screen -ls | head -n -2 | tail -n +2

fi # endif [ "$PS1" ];
